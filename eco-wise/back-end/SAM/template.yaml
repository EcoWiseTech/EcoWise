AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM template for mass resources ( Lambda + api gateway + custom events)

Globals:
  Function:
    Timeout: 60
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"
    # AllowCredentials: true  Uncomment only if you choose a specific origin instead of the * wildcard.

Resources:
  StoreWeatherApiFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: StoreWeatherApiFunction/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: WeatherTable
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(30 minutes)
            Description: "Trigger the Lambda function every 30 minutes"
  StoreTemperatureApiFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: StoreTemperatureApiFunction/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: TemperatureTable
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
            Description: "Trigger the Lambda function every 5 minutes"

  GetWeatherApiFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: GetWeatherApiFunction/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: WeatherTable
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        GetWeatherApiResource:
          Type: Api 
          Properties:
            Path: /GetWeatherApi
            Method: get
            RestApiId: !Ref ServerlessRestApi  # Reference to your REST API
Outputs:
  GetWeatherApiResource:
    Description: "API Gateway endpoint URL for Prod stage for GetWeatherApiFunction "
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/GetWeatherApi/"
  GetWeatherApiFunction:
    Description: "GetWeatherApiFunction ARN"
    Value: !GetAtt GetWeatherApiFunction.Arn
  GetWeatherApiFunctionIamRole:
    Description: "Implicit IAM Role created for GetWeatherApiFunction"
    Value: !GetAtt GetWeatherApiFunctionRole.Arn

  StoreWeatherApiFunction:
      Description: "StoreWeatherApiFunction ARN"
      Value: !GetAtt StoreWeatherApiFunction.Arn
  StoreWeatherApiFunctionIamRole:
      Description: "Implicit IAM Role created for StoreWeatherApiFunction"
      Value: !GetAtt StoreWeatherApiFunctionRole.Arn

  StoreTemperatureApiFunction:
      Description: "StoreTemperatureApiFunction ARN"
      Value: !GetAtt StoreTemperatureApiFunction.Arn
  StoreTemperatureApiFunctionIamRole:
      Description: "Implicit IAM Role created for StoreTemperatureApiFunction"
      Value: !GetAtt StoreTemperatureApiFunction.Arn
