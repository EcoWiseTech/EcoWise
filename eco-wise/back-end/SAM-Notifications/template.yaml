AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM-Notifications

  Sample SAM Template for SAM-Notifications
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300

Resources:
  ConnectFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ConnectFunction/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
  DisconnectFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: DisconnectFunction/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
  SendMessageFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: SendMessageFunction/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
  BroadcastFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: BroadcastFunction/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
  ProcessDeviceTimeCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ProcessDeviceTimeCheckFunction/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        ScheduledTrigger:
          Type: Schedule
          Properties:
            Schedule: rate(30 minutes) # Runs every 5 minutes
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:*
              Resource: "*" # Grants full DynamoDB access
            - Effect: Allow
              Action:
                - sqs:*
              Resource: "*" # Grants full SQS access
  ProccessTemperatureCheck:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ProccessTemperatureCheck/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        ScheduledTrigger:
          Type: Schedule
          Properties:
            Schedule: rate(30 minutes) 
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:*
              Resource: "*" 
            - Effect: Allow
              Action:
                - sqs:*
              Resource: "*"