Description: Root Stack, contains all the resources needed for the application
AWSTemplateFormatVersion: '2010-09-09'

Resources:
  # ------------------------------  START Amplify Stack ------------------------------  #
  AmplifyApp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Amplify::App"
    DeletionPolicy: "Retain"
    Properties:
      AccessToken: "{{resolve:secretsmanager:GithubAccessToken:SecretString:GithubAccessToken}}"
      Repository: "https://github.com/EcoWiseTech/EcoWise"
      EnvironmentVariables:
      - Name: REACT_APP_ADMIN_SECRET_KEY_ID
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_ADMIN_SECRET_KEY_ID}}'
      - Name: REACT_APP_GOOGLE_AUTH_PROVIDER_CLIENT_ID
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_GOOGLE_AUTH_PROVIDER_CLIENT_ID}}'
      - Name: REACT_APP_COGNITO_CLIENT_ID
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_CLIENT_ID}}'
      - Name: AMPLIFY_MONOREPO_APP_ROOT
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:AMPLIFY_MONOREPO_APP_ROOT}}'
      - Name: REACT_APP_COGNITO_AUTH_FLOW
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_AUTH_FLOW}}'
      - Name: REACT_APP_REDIRECT_URI
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_REDIRECT_URI}}'
      - Name: AMPLIFY_DIFF_DEPLOY
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:AMPLIFY_DIFF_DEPLOY}}'
      - Name: REACT_APP_ADMIN_ACCESS_KEY_ID
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_ADMIN_ACCESS_KEY_ID}}'
      - Name: REACT_APP_COGNITO_REFRESH_TOKEN_FLOW
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_REFRESH_TOKEN_FLOW}}'
      - Name: REACT_APP_AWS_REGION
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_AWS_REGION}}'
      - Name: REACT_APP_FACEBOOK_SSO_APP_ID
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_FACEBOOK_SSO_APP_ID}}'
      - Name: REACT_APP_ECOWISE_API_URL
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_ECOWISE_API_URL}}'
      - Name: REACT_APP_COGNITO_OAUTH_DOMAIN
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_OAUTH_DOMAIN}}'
      - Name: REACT_APP_COGNITO_SMS_MFA_CHALLENGE
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_SMS_MFA_CHALLENGE}}'
      - Name: REACT_APP_USER_POOL_ID
        Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_USER_POOL_ID}}'
      Platform: "WEB"
      EnableBranchAutoDeletion: false
      BuildSpec: |
        version: 1
        applications:
          - frontend:
              phases:
                preBuild:
                  commands:
                    - npm ci --cache .npm --prefer-offline
                build:
                  commands:
                    - npm run build
              artifacts:
                baseDirectory: build
                files:
                  - "**/*"
              cache:
                paths:
                  - .npm/**/*
            appRoot: eco-wise/front-end
      CustomRules:
      - Status: "404-200"
        Target: "/index.html"
        Source: "/<*>"
      - Status: "200"
        Target: "/index.html"
        Source: "</^[^.]+$|\\.(?!(css|gif|ico|jpg|jpeg|webp|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>"
      CacheConfig:
        Type: "AMPLIFY_MANAGED"
      CustomHeaders: ""
      Name: "EcoWise"
      
  AmplifyBranch:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Amplify::Branch"
    DeletionPolicy: "Retain"
    DependsOn:
      - AmplifyApp
    Properties:
      Backend: {}
      AppId: !GetAtt AmplifyApp.AppId
      EnablePullRequestPreview: false
      EnableAutoBuild: true
      EnablePerformanceMode: false
      Stage: "PRODUCTION"
      BranchName: "main"
      Framework: "React"
  # ------------------------------  END Amplify Stack  ------------------------------  #

  # ------------------------------  Start Cognito Stack  ------------------------------  #
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: EcoWiseWebAppUserPool
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          TemporaryPasswordValidityDays: 7
        SignInPolicy:
          AllowedFirstAuthFactors:
            - PASSWORD
      DeletionProtection: ACTIVE
      # LambdaConfig:
      #   CustomMessage: >-
      #     arn:aws:lambda:us-east-1:992382578667:function:SAM-FormatPasswordResetEmailFunction-jlrl6BV7rMja
      Schema:
        - Name: profile
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: address
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: birthdate
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '10'
            MaxLength: '10'
        - Name: gender
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: preferred_username
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: updated_at
          AttributeDataType: Number
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          NumberAttributeConstraints:
            MinValue: '0'
        - Name: website
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: picture
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: identities
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints: {}
        - Name: sub
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: false
          Required: true
          StringAttributeConstraints:
            MinLength: '1'
            MaxLength: '2048'
        - Name: phone_number
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: phone_no_verified
          AttributeDataType: Boolean
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
        - Name: zoneinfo
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: locale
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: email
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: email_verified
          AttributeDataType: Boolean
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
        - Name: given_name
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: family_name
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: middle_name
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: name
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
        - Name: nickname
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: '0'
            MaxLength: '2048'
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      VerificationMessageTemplate:
        EmailMessageByLink: >-
          Please click the link below to verify your email address. {##Verify
          Email##}
        EmailSubjectByLink: EcoWise verification link
        DefaultEmailOption: CONFIRM_WITH_LINK
      SmsAuthenticationMessage: Your authentication code is {####}. Please enter it in the log in page.
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate: []
      MfaConfiguration: OPTIONAL
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      SmsConfiguration:
        SnsCallerArn: !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/CognitoSMSRole
        ExternalId: 3eec5d75-9954-4e6f-bc0d-354142c21099
        SnsRegion: us-east-1
      UserPoolTags: {}
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameConfiguration:
        CaseSensitive: false
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Priority: 1
            Name: verified_email
          - Priority: 2
            Name: verified_phone_number
      UserPoolTier: ESSENTIALS

  FacebookUserPoolIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !GetAtt CognitoUserPool.UserPoolId
      ProviderName: Facebook
      ProviderType: Facebook
      ProviderDetails:
        api_version: v17.0
        attributes_url: https://graph.facebook.com/v17.0/me?fields=
        attributes_url_add_attributes: 'true'
        authorize_scopes: public_profile, email
        authorize_url: https://www.facebook.com/v17.0/dialog/oauth
        client_id: "{{resolve:secretsmanager:UserPoolIdentityProvider:SecretString:facebook_client_id}}"
        client_secret: "{{resolve:secretsmanager:UserPoolIdentityProvider:SecretString:facebook_client_secret}}"
        token_request_method: GET
        token_url: https://graph.facebook.com/v17.0/oauth/access_token
      AttributeMapping:
        email: email
        username: id
  
  GoogleUserPoolIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !GetAtt CognitoUserPool.UserPoolId
      ProviderName: Google
      ProviderType: Google
      ProviderDetails:
        attributes_url: https://people.googleapis.com/v1/people/me?personFields=
        attributes_url_add_attributes: 'true'
        authorize_scopes: email profile openid
        authorize_url: https://accounts.google.com/o/oauth2/v2/auth
        client_id: "{{resolve:secretsmanager:UserPoolIdentityProvider:SecretString:google_client_id}}"
        client_secret: "{{resolve:secretsmanager:UserPoolIdentityProvider:SecretString:google_client_secret}}"
        oidc_issuer: https://accounts.google.com
        token_request_method: POST
        token_url: https://www.googleapis.com/oauth2/v4/token
      AttributeMapping:
        email: email
        email_verified: email_verified
        username: sub
  
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
      - GoogleUserPoolIdentityProvider
      - FacebookUserPoolIdentityProvider
    Properties:
      UserPoolId: !GetAtt CognitoUserPool.UserPoolId
      ClientName: EcoWiseWebApp
      RefreshTokenValidity: 5
      AccessTokenValidity: 60
      IdTokenValidity: 60
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
      SupportedIdentityProviders:
        - COGNITO
        - Facebook
        - Google
      CallbackURLs:
        - http://localhost:3000/login 
        - !Sub >-
          https://main.${AmplifyApp.DefaultDomain}/login
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthScopes:
        - aws.cognito.signin.user.admin
        - email
        - openid
        - phone
        - profile
      AllowedOAuthFlowsUserPoolClient: true
      PreventUserExistenceErrors: ENABLED
      EnableTokenRevocation: true
      EnablePropagateAdditionalUserContextData: false
      AuthSessionValidity: 3
  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !GetAtt CognitoUserPool.UserPoolId
      Domain: eco-wise
      ManagedLoginVersion: 2

  CognitoManagedLoginBranding:
    Type: AWS::Cognito::ManagedLoginBranding
    DependsOn:
      - CognitoUserPool
      - CognitoUserPoolClient
    Properties:
      ClientId: !GetAtt CognitoUserPoolClient.ClientId
      UserPoolId: !GetAtt CognitoUserPool.UserPoolId
      UseCognitoProvidedValues: true

  # ------------------------------  END Cognito Stack  ------------------------------  #

  # ------------------------------  START DynamoDB table stacks ------------------------------  #
  WeatherTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: WeatherTable
      AttributeDefinitions:
        - AttributeName: Location
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: Location
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: Environment
          Value: Production
        - Key: Application
          Value: EcoWise
  # ------------------------------ END DynamoDB table stacks ------------------------------  #   

  # ------------------------------ START Weather Table creation------------------------------  # 
  TemperatureTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TemperatureTable
      AttributeDefinitions:
        - AttributeName: Location
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: Location
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: Environment
          Value: Production
        - Key: Application
          Value: EcoWise
  # ------------------------------ END Weather Table creation------------------------------  # 

  # ------------------------------ START Base API gateway stack------------------------------  # 
  EcoWiseApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ecowiseapi
      Description: "API Gateway for the EcoWise project"
      EndpointConfiguration:
        Types:
          - REGIONAL

  # API endpoints for GET method integration
  GetWeatherDataResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt EcoWiseApi.RootResourceId
      PathPart: get-weather-data
      RestApiId: !Ref EcoWiseApi
  # ------------------------------ END Base API gateway stack------------------------------  # 

  # ------------------------------ START SNS+CloudWatch stacks ------------------------------  # 
  # KURT
  EcowiseApiSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "ecowiseApiTrafficAlert1"

  EcowiseApiTrafficAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "ecowiseapiTrafficAlarm1"
      AlarmDescription: "This alarm monitors the number of requests sent to ecowiseapi. If it exceeds 10 requests in 30 seconds, an email is sent to kurrbarr@gmail.com ."
      MetricName: "Count"
      Namespace: "AWS/ApiGateway"
      Statistic: "Sum"
      Period: 21600
      EvaluationPeriods: 1
      Threshold: 10
      ComparisonOperator: "GreaterThanThreshold"
      Dimensions:
        - Name: "ApiName"
          Value: "ecowiseapi"
      AlarmActions:
        - Ref: "EcowiseApiSnsTopic"
      DatapointsToAlarm: 1
      TreatMissingData: "missing"
      ActionsEnabled: true

  EcowiseApiSnsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: "email"
      Endpoint: "kurrbarr@gmail.com"
      TopicArn: 
        Ref: "EcowiseApiSnsTopic"
  # ------------------------------ END SNS+CloudWatch stacks ------------------------------  # 
